import { fetchToursFromLevelTravel } from './server/providers/leveltravel.js';
import dotenv from 'dotenv';

dotenv.config();

async function testProvider() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä Level.Travel...\n');
    
    const params = {
      destination: '–¢—É—Ä—Ü–∏—è',
      departureCity: '–ú–æ—Å–∫–≤–∞',
      startDate: new Date('2025-08-22'),
      endDate: new Date('2025-08-29'),
      nights: 7,
      adults: 2,
      children: 0,
      budget: 200000
    };
    
    console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:', params);
    console.log('\n‚è≥ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫...\n');
    
    const tours = await fetchToursFromLevelTravel(params);
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—É—Ä–æ–≤: ${tours.length}\n`);
    
    if (tours.length > 0) {
      console.log('üìã –ü–µ—Ä–≤—ã–µ 3 —Ç—É—Ä–∞:\n');
      
      tours.slice(0, 3).forEach((tour, index) => {
        console.log(`${index + 1}. ${tour.title}`);
        console.log(`   üìç ${tour.destination}`);
        console.log(`   üè® ${tour.hotel}`);
        console.log(`   ‚≠ê –ó–≤–µ–∑–¥—ã: ${tour.hotelStars}`);
        console.log(`   üí∞ –¶–µ–Ω–∞: ${tour.price.toLocaleString('ru-RU')} ‚ÇΩ`);
        console.log(`   üìä –†–µ–π—Ç–∏–Ω–≥: ${tour.rating || '–Ω–µ—Ç'} (${tour.reviewsCount || 0} –æ—Ç–∑—ã–≤–æ–≤)`);
        console.log(`   üèñÔ∏è –î–æ –ø–ª—è–∂–∞: ${tour.beachDistance ? tour.beachDistance + '–º' : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}`);
        console.log(`   ‚úàÔ∏è –î–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞: ${tour.airportDistance ? (tour.airportDistance / 1000).toFixed(1) + '–∫–º' : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}`);
        console.log(`   üîó –°—Å—ã–ª–∫–∞: ${tour.link}`);
        console.log(`   üéØ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${tour.matchScore}%`);
        console.log('');
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è mini app
      console.log('üì± –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ mini app:');
      const firstTour = tours[0];
      console.log(JSON.stringify({
        id: firstTour.externalId,
        title: firstTour.title,
        price: firstTour.price,
        image: firstTour.image,
        features: {
          wifi: firstTour.hasWifi,
          pool: firstTour.hasPool,
          kidsClub: firstTour.hasKidsClub,
          fitness: firstTour.hasFitness,
          aquapark: firstTour.hasAquapark
        },
        location: {
          lat: firstTour.latitude,
          lng: firstTour.longitude
        },
        availability: {
          instant: firstTour.instantConfirm,
          status: firstTour.availability
        }
      }, null, 2));
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error(error.stack);
  }
}

testProvider();