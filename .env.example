# AI Travel Agent - Environment Variables Example
# Copy this file to .env and fill in your values

# ===========================================
# Database Configuration
# ===========================================
# PostgreSQL connection string
DATABASE_URL=postgresql://user:password@localhost:5432/ai_travel_agent

# ===========================================
# Telegram Bot Configuration
# ===========================================
# Bot token from @BotFather
TELEGRAM_TOKEN=your_telegram_bot_token_here

# Use webhook instead of polling (for production)
TELEGRAM_USE_WEBHOOK=false

# ===========================================
# Application Configuration
# ===========================================
# Application URL (required for webhook mode and CORS)
APP_URL=http://localhost:5000

# Environment: development, staging, production
NODE_ENV=development

# Log level: error, warn, info, debug
LOG_LEVEL=info

# Port (default 5000)
PORT=5000

# ===========================================
# Redis Configuration
# ===========================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# ===========================================
# AI Services (Optional)
# ===========================================
# OpenRouter API for AI text analysis
OPENROUTER_API_KEY=your_openrouter_api_key
AI_MODEL=anthropic/claude-3-haiku

# Yandex GPT API (alternative AI provider)
YANDEX_GPT_API_KEY=
YANDEX_GPT_FOLDER_ID=

# ===========================================
# Travel Providers
# ===========================================
# Level.Travel API
LEVELTRAVEL_API_KEY=your_leveltravel_api_key
LEVEL_TRAVEL_PARTNER=627387
LEVEL_TRAVEL_MARKER=your_marker
LEVEL_TRAVEL_AFFILIATE_URL=https://level.travel

# ===========================================
# Security & Authentication
# ===========================================
# JWT Secrets (generate with: openssl rand -base64 32)
JWT_ACCESS_SECRET=generate_random_32_char_string_here
JWT_REFRESH_SECRET=generate_different_random_32_char_string_here
JWT_ACCESS_EXPIRY=15m
JWT_REFRESH_EXPIRY=7d
JWT_ISSUER=ai-travel-agent
JWT_AUDIENCE=ai-travel-agent-api

# CSRF Protection
CSRF_SECRET=generate_random_32_char_string_here

# Session & Cookie Secrets
COOKIE_SECRET=generate_random_32_char_string_here
SESSION_SECRET=generate_random_32_char_string_here

# ===========================================
# Monitoring & Observability (Optional)
# ===========================================
# Sentry DSN for error tracking
SENTRY_DSN=

# Prometheus metrics
METRICS_ENABLED=true

# ===========================================
# External Services (Optional)
# ===========================================
# Email service for notifications
EMAIL_HOST=
EMAIL_PORT=587
EMAIL_USER=
EMAIL_PASSWORD=
EMAIL_FROM=noreply@ai-travel-agent.com

# Slack webhook for alerts
SLACK_WEBHOOK_URL=

# ===========================================
# Feature Flags
# ===========================================
# Enable/disable specific features
FEATURE_AI_ANALYSIS=true
FEATURE_GROUP_SEARCH=true
FEATURE_BACKGROUND_MONITORING=true
FEATURE_TOUR_VOTING=true

# AI and Search Features
ENABLE_AI_PARSING=false
ENABLE_SMART_RANKING=false
ENABLE_NEW_PROFILE=false
AI_PARSING_PERCENTAGE=10

# Room preferences feature
ENABLE_ROOM_PREFERENCES=false

# Background search feature
ENABLE_BACKGROUND_SEARCH=false
BACKGROUND_SEARCH_SCHEDULE=0 9,21 * * *
# Schedule format: minute hour day month weekday
# Default: 0 9,21 * * * (at 9:00 and 21:00 every day)
# Examples:
# - */30 * * * * (every 30 minutes)
# - 0 */4 * * * (every 4 hours)
# - 0 8,12,16,20 * * * (4 times a day)

# ===========================================
# Rate Limiting
# ===========================================
# Max requests per window
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# API specific limits
API_RATE_LIMIT_WINDOW_MS=60000
API_RATE_LIMIT_MAX_REQUESTS=30

# ===========================================
# Development Tools
# ===========================================
# Enable debug mode
DEBUG=false

# Database UI (Adminer)
ADMINER_PORT=8080

# Redis UI (Redis Commander)
REDIS_COMMANDER_PORT=8081