import axios from 'axios';
import dotenv from 'dotenv';

dotenv.config();

const apiKey = process.env.LEVELTRAVEL_API_KEY;
const headers = {
  'Authorization': `Token token="${apiKey}"`,
  'Accept': 'application/vnd.leveltravel.v3',
  'Content-Type': 'application/json'
};

async function debugAPI() {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ departures
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É /references/departures...\n');
    const departuresResponse = await axios.get(
      'https://api.level.travel/references/departures',
      { headers, validateStatus: () => true }
    );
    
    console.log('–°—Ç–∞—Ç—É—Å:', departuresResponse.status);
    console.log('–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:', typeof departuresResponse.data);
    console.log('–ö–ª—é—á–∏ –æ—Ç–≤–µ—Ç–∞:', Object.keys(departuresResponse.data));
    console.log('–ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤:', JSON.stringify(departuresResponse.data).substring(0, 500));
    
    // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å –º–∞—Å—Å–∏–≤–æ–º –≤–Ω—É—Ç—Ä–∏
    if (departuresResponse.data.departures) {
      console.log('\n‚úÖ –ù–∞–π–¥–µ–Ω –º–∞—Å—Å–∏–≤ departures');
      console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:', departuresResponse.data.departures.length);
      console.log('–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç:', departuresResponse.data.departures[0]);
    }
    
    console.log('\n' + '='.repeat(50) + '\n');
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ —Ç—É—Ä–æ–≤
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–∏—Å–∫–∞ —Ç—É—Ä–æ–≤...\n');
    
    const searchParams = {
      from_city: 'Moscow',
      to_country: 'TR', 
      nights: 7,
      adults: 2,
      start_date: '01.02.2025'
    };
    
    console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', JSON.stringify(searchParams, null, 2));
    
    const enqueueResponse = await axios.post(
      'https://api.level.travel/search/enqueue',
      searchParams,
      { headers, validateStatus: () => true }
    );
    
    console.log('\n–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞:');
    console.log('–°—Ç–∞—Ç—É—Å:', enqueueResponse.status);
    console.log('–î–∞–Ω–Ω—ã–µ:', JSON.stringify(enqueueResponse.data, null, 2));
    
    if (enqueueResponse.data.request_id) {
      const requestId = enqueueResponse.data.request_id;
      
      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
      console.log('\n–ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã...');
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
      const statusUrl = `https://api.level.travel/search/status?request_id=${requestId}`;
      console.log('\n–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å:', statusUrl);
      
      const statusResponse = await axios.get(statusUrl, { headers, validateStatus: () => true });
      console.log('–°—Ç–∞—Ç—É—Å –ø–æ–∏—Å–∫–∞:', JSON.stringify(statusResponse.data, null, 2));
      
      // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–µ–ª–∏
      const hotelsUrl = `https://api.level.travel/search/get_grouped_hotels?request_id=${requestId}`;
      console.log('\n–ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–µ–ª–∏:', hotelsUrl);
      
      const hotelsResponse = await axios.get(hotelsUrl, { headers, validateStatus: () => true });
      console.log('–°—Ç–∞—Ç—É—Å:', hotelsResponse.status);
      console.log('–ö–ª—é—á–∏ –æ—Ç–≤–µ—Ç–∞:', Object.keys(hotelsResponse.data));
      
      if (hotelsResponse.data.hotels && hotelsResponse.data.hotels.length > 0) {
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π:', hotelsResponse.data.hotels.length);
        console.log('\n–ü–µ—Ä–≤—ã–π –æ—Ç–µ–ª—å:');
        console.log(JSON.stringify(hotelsResponse.data.hotels[0], null, 2));
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    if (error.response) {
      console.log('–°—Ç–∞—Ç—É—Å:', error.response.status);
      console.log('–î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

debugAPI();