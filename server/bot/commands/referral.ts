import { BaseCommand, CommandContext } from './base';
import { storage } from '../../storage';
import { createReferralCode } from '../../services/referral';

/**
 * –ö–æ–º–∞–Ω–¥–∞ /referral - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π
 */
export class ReferralCommand extends BaseCommand {
  name = 'referral';
  description = '–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É';
  usage = '/referral';

  protected async executeCommand(ctx: CommandContext): Promise<void> {
    const { bot, chatId, userId } = ctx;

    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const profile = await storage.getProfile(userId);
      
      if (!profile) {
        await this.sendMessage(
          bot,
          chatId,
          '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.'
        );
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
      const referrals = await storage.getReferralsByUser(userId);
      
      // –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (!profile.referralCode) {
        const referralCode = await createReferralCode(userId);
        await storage.createOrUpdateProfile({
          ...profile,
          referralCode
        });
      }
      
      const botUsername = (await bot.getMe()).username;
      const referralLink = `https://t.me/${botUsername}?start=ref_${userId}`;
      
      let message = `üéÅ *–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:*\n\`${referralLink}\`\n\n`;
      message += `–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å *500 ‚ÇΩ* –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n\n`;
      
      if (referrals.length > 0) {
        message += `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:*\n`;
        message += `‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö: ${referrals.length}\n`;
        
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –±–æ–Ω—É—Å
        const totalBonus = referrals.reduce((sum, ref) => sum + (ref.bonus || 0), 0);
        message += `‚Ä¢ –û–±—â–∏–π –±–æ–Ω—É—Å: ${this.formatNumber(totalBonus)} ‚ÇΩ\n\n`;
        
        message += `üë• *–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:*\n`;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        const lastReferrals = referrals.slice(0, 5);
        lastReferrals.forEach((ref, index) => {
          const name = ref.referred?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
          message += `${index + 1}. ${name} (+${ref.bonus} ‚ÇΩ)\n`;
        });
      } else {
        message += `–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏!`;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
      const shareText = `–Ø –Ω–∞—à–µ–ª –æ—Ç–ª–∏—á–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç—É—Ä–æ–≤! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è: ${referralLink}`;
      const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent(shareText)}`;
      
      await this.sendMessage(bot, chatId, message, {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π', url: shareUrl }],
            [{ text: 'üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', callback_data: `copy_referral_${userId}` }]
          ]
        }
      });
    } catch (error) {
      await this.sendError(bot, chatId, error as Error);
    }
  }
}